{"ast":null,"code":"var _jsxFileName = \"/Users/kevinescarmant/Desktop/DotCms/demo/src/ExtraCredit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExtraCredit() {\n  _s();\n  const [token, setToken] = useState();\n  const [navigationData, setNavigationData] = useState();\n  useEffect(() => {\n    const fetchToken = async () => {\n      const url = 'https://demo.dotcms.com/api/v1/authentication/api-token';\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user: 'admin@dotcms.com',\n            password: 'admin',\n            expirationDays: 10\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          console.log('Token:', data);\n          setToken(data);\n          return;\n        } else {\n          console.error('Error:', data);\n          alert('could not get token');\n        }\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    };\n    fetchToken();\n  }, []);\n  const fetchToken = async () => {\n    const url = 'https://demo.dotcms.com/api/v1/authentication/api-token';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: 'admin@dotcms.com',\n          password: 'admin',\n          expirationDays: 10\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Token:', data);\n        setToken(data);\n        return;\n      } else {\n        console.error('Error:', data);\n        alert('could not get token');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n    }\n  };\n  const fetchNavItems = async () => {\n    try {\n      Promise.all();\n      await fetchToken();\n      const url = 'https://demo.dotcms.com/api/v1/nav/?depth=2';\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token.entity.token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Navigation Data:', data);\n        setNavigationData(data);\n      } else {\n        console.error('Error fetching data:', data);\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchNavItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"ExtraCredit \", token !== undefined && token.entity.token]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(ExtraCredit, \"7O5VO7jizTg7v2a3qNElrbZK3qQ=\");\n_c = ExtraCredit;\nexport default ExtraCredit;\nvar _c;\n$RefreshReg$(_c, \"ExtraCredit\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ExtraCredit","_s","token","setToken","navigationData","setNavigationData","fetchToken","url","response","fetch","method","headers","body","JSON","stringify","user","password","expirationDays","data","json","ok","console","log","error","alert","fetchNavItems","Promise","all","entity","children","undefined","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevinescarmant/Desktop/DotCms/demo/src/ExtraCredit.js"],"sourcesContent":["import React , {useEffect ,useState} from 'react'\n\n\n\nfunction ExtraCredit() {\n    const [token,setToken] = useState()\n    const [navigationData,setNavigationData] = useState()\n    useEffect(() => {\n        const fetchToken = async () => {\n        const url = 'https://demo.dotcms.com/api/v1/authentication/api-token';\n\n        try {\n            const response = await fetch(url, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'            \n            },\n            body: JSON.stringify({\n                user: 'admin@dotcms.com',\n                password: 'admin',\n                expirationDays: 10,\n            }),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                console.log('Token:', data);\n                setToken(data)\n                return\n            } else {\n                console.error('Error:', data);\n                alert('could not get token')\n            }\n        } catch (error) {\n            console.error('Fetch error:', error);\n        }\n        };\n\n        fetchToken();\n    }, []);\n\n    const fetchToken = async () => {\n        const url = 'https://demo.dotcms.com/api/v1/authentication/api-token';\n\n        try {\n            const response = await fetch(url, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'            \n            },\n            body: JSON.stringify({\n                user: 'admin@dotcms.com',\n                password: 'admin',\n                expirationDays: 10,\n            }),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                console.log('Token:', data);\n                setToken(data)\n                return\n            } else {\n                console.error('Error:', data);\n                alert('could not get token')\n            }\n        } catch (error) {\n            console.error('Fetch error:', error);\n        }\n    };\n\n\n\n    const fetchNavItems = async () => {\n        \n      try {\n        Promise.all()\n        await fetchToken()\n        const url = 'https://demo.dotcms.com/api/v1/nav/?depth=2';\n        const response = await fetch(url, {\n          method: 'GET', \n          headers: {\n            'Authorization':`Bearer ${token.entity.token}`\n        }\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n          console.log('Navigation Data:', data);\n          setNavigationData(data)\n        } else {\n          console.error('Error fetching data:', data);\n        }\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    };\n    useEffect(() => {\n\n    fetchNavItems();\n    \n    }, [])\n    \n\n\n        \n    \n\n\n  return (\n    <div>ExtraCredit { token !== undefined && token.entity.token}\n    { /* navigationData !== undefined && navigationData.entity.children */}\n    </div>\n  )\n}\n\nexport default ExtraCredit"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIjD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC;EACnC,MAAM,CAACO,cAAc,EAACC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACrDD,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,GAAG,GAAG,yDAAyD;MAErE,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;UAClCG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBC,IAAI,EAAE,kBAAkB;YACxBC,QAAQ,EAAE,OAAO;YACjBC,cAAc,EAAE;UACpB,CAAC;QACD,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAElC,IAAIX,QAAQ,CAACY,EAAE,EAAE;UACbC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,IAAI,CAAC;UAC3Bf,QAAQ,CAACe,IAAI,CAAC;UACd;QACJ,CAAC,MAAM;UACHG,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEL,IAAI,CAAC;UAC7BM,KAAK,CAAC,qBAAqB,CAAC;QAChC;MACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACxC;IACA,CAAC;IAEDjB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,GAAG,GAAG,yDAAyD;IAErE,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAClCG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,IAAI,EAAE,kBAAkB;UACxBC,QAAQ,EAAE,OAAO;UACjBC,cAAc,EAAE;QACpB,CAAC;MACD,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,IAAIX,QAAQ,CAACY,EAAE,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,IAAI,CAAC;QAC3Bf,QAAQ,CAACe,IAAI,CAAC;QACd;MACJ,CAAC,MAAM;QACHG,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEL,IAAI,CAAC;QAC7BM,KAAK,CAAC,qBAAqB,CAAC;MAChC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EAID,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAEhC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,CAAC;MACb,MAAMrB,UAAU,CAAC,CAAC;MAClB,MAAMC,GAAG,GAAG,6CAA6C;MACzD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,eAAe,EAAC,UAAUT,KAAK,CAAC0B,MAAM,CAAC1B,KAAK;QAChD;MACA,CAAC,CAAC;MAEF,MAAMgB,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,IAAIX,QAAQ,CAACY,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,IAAI,CAAC;QACrCb,iBAAiB,CAACa,IAAI,CAAC;MACzB,CAAC,MAAM;QACLG,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEL,IAAI,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EACD3B,SAAS,CAAC,MAAM;IAEhB6B,aAAa,CAAC,CAAC;EAEf,CAAC,EAAE,EAAE,CAAC;EAQR,oBACE1B,OAAA;IAAA8B,QAAA,GAAK,cAAY,EAAE3B,KAAK,KAAK4B,SAAS,IAAI5B,KAAK,CAAC0B,MAAM,CAAC1B,KAAK;EAAA;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvD,CAAC;AAEV;AAACjC,EAAA,CAjHQD,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAmHpB,eAAeA,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}